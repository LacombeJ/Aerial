
// Gradle build file

description = 'Java Game Engine'
group 'jonl.jge'
version = '0.0.1'

apply plugin: 'java'
apply plugin: 'eclipse'

repositories {
    mavenCentral()
}

// Project level dependencies
project.ext {
    dependency_gson = dependencies.create( group: 'com.google.code.gson', name: 'gson', version: '2.8.3' )
}

boolean isModule(entry) {
    //TODO find a better way to find a module
    //Look at .classpath for eclipse entry kind
    return entry.kind == 'src' || entry.kind == 'lib'
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'eclipse'
    
    sourceCompatibility = 9
    targetCompatibility = 9

    sourceSets.main.java.srcDirs = ["src"]
    sourceSets.main.resources.srcDirs = ["res"]

    repositories {
        mavenCentral()
    }
    
    compileJava {
        options.fork = true
        options.incremental = true
        doFirst {
	        options.compilerArgs = [
	            '--module-path', classpath.asPath,
	        ]
        }
    }
    
    eclipse.classpath.file.whenMerged {
        entries.findAll { isModule(it) }.each { it.entryAttributes['module'] = 'true' }
    }

}

dependencies {
    compile project(':jge')
    compile project(':modules:module-aerial')
    compile project(':modules:module-jgl')
    compile project(':modules:module-aui')
    compile project(':modules:module-utils')
    compile project(':modules:module-vmath')
}

jar {
    from configurations.compile .collect { zipTree it }
    exclude '**/module-info.class'
    exclude '**/*.sha1'
    exclude '**/*.git'
}

apply plugin: 'maven-publish'

publishing {
    publications {
        mavenJava(MavenPublication) {
            
            // Remove dependencies since we already included them in jar
            pom.withXml {
                def node = it.asNode()
                node.remove(node.get("dependencies"))
            }
            
            from components.java
        }
    }
    repositories {
        mavenLocal()
    }
}

