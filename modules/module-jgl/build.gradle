


import org.apache.tools.ant.taskdefs.condition.Os

dependencies {
    compile project(':modules:module-utils')
}

// ----------------------------------------------------------------------------

// LWJGL dependencies //

String[][] libs = [
    ['',        'lwjgl'         ,'lwjgl' ],
    ['_glfw',   'lwjgl-glfw'    ,'glfw' ],
    ['_openal', 'lwjgl-openal'  ,'OpenAL' ],
    ['_opengl', 'lwjgl-opengl'  ,'lwjgl_opengl' ],
    ['_stb',    'lwjgl-stb'     ,'lwjgl_stb' ]
]

FileCollection[] libFiles = new FileCollection[libs.length]

//String arch = System.properties['sun.arch.data.model'] //arch type (32 or 64)

String os = "windows"
String ext = ".dll"
if (Os.isFamily(Os.FAMILY_UNIX)) {
    os = "linux"
    ext = ".so"
} else if (Os.isFamily(Os.FAMILY_MAC)) {
    os = "macos"
    ext = ".dylib"
}

String[][] ref = new String[libs.length][2]
for (int i=0; i<ref.length; i++) {
    
    String postfix = libs[i][0]
    String name = libs[i][1]
    String nlib = libs[i][2]
    
    String jarFile = 'lib/lwjgl_3.1.1'+postfix+'/'+name+'.jar'
    String nativeFile = 'lib/lwjgl_3.1.1'+postfix+'/'+name+'-natives-'+os+'/'+nlib+ext
    
    ref[i][0] = jarFile
    ref[i][1] = nativeFile
    
}

// ----------------------------------------------------------------------------

dependencies {
    
    for (int i=0; i<ref.length; i++) {
        String jarFile = ref[i][0]
        String nativeFile = ref[i][1]
        
        compile files(jarFile)
        libFiles[i] = files(jarFile)
    }
    
}

jar {
    for (int i=0; i<ref.length; i++) {
        from libFiles[i].collect {
	        zipTree it
        }
    }
}

task extractNatives {
    
    for (int i=0; i<ref.length; i++) {
        
        String nativeFile = ref[i][1]
        copy {
            from project.file(nativeFile)
            into new File(rootProject.buildDir, 'natives/')
        }
        
    }
    
}

build.finalizedBy(extractNatives)

