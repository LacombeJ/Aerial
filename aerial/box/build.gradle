
import org.gradle.plugins.ide.eclipse.model.ClasspathEntry
import org.gradle.plugins.ide.eclipse.model.SourceFolder
import org.gradle.plugins.ide.eclipse.model.FileReference
import org.gradle.plugins.ide.eclipse.model.internal.FileReferenceFactory

apply plugin: 'eclipse'

dependencies {
    compile project(':engine')
}

// ----------------------------------------------------------------------------

String[] jarFiles = [
    'lib/jbox2d_2.3.1/jbox2d.jar'
]

FileCollection[] libFiles = new FileCollection[jarFiles.length]

// ----------------------------------------------------------------------------

dependencies {
    
    for (int i=0; i<jarFiles.length; i++) {
        String jarFile = jarFiles[i]
        
        compile files(jarFile)
        libFiles[i] = files(jarFile)
    }
    
}

jar {
    for (int i=0; i<libFiles.length; i++) {
        from libFiles[i].collect {
	        zipTree it
        }
    }
}

boolean isModule(entry) {
    return entry.kind == 'lib'
}

boolean getSourceDir(it) {
    return false;
}

boolean setSourceDir(entries, factory) {
    String[] sources = [
        'jbox2d'
    ]
    for (ClasspathEntry entry : entries) {
        for (int i=0; i<sources.length; i++) {
            String jarName = sources[i]+'.jar'
            String sourceName = sources[i]+'-sources.jar'
            String javadocName = sources[i]+'-javadoc.jar'
            if (entry.path.endsWith(jarName)) {
                String sourcePath = entry.path.replace(jarName, sourceName)
                FileReference sourceRef = factory.fromPath(sourcePath)
                entry.sourcePath = sourceRef
                
                String javadocPath = entry.path.replace(jarName, javadocName)
                FileReference javadocRef = factory.fromPath(javadocPath)
                entry.javadocPath = javadocRef
            }
        }
    }
    return false
}

eclipse.classpath {
    FileReferenceFactory factory = getFileReferenceFactory()
    file.whenMerged {
        setSourceDir(entries, factory)
        entries.findAll { isModule(it) }.each { it.entryAttributes['module'] = 'true' }
    }
}

